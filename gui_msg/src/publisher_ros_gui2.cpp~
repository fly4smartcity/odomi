#include "ros/ros.h"
#include "gui_msg/msg_ros_gui.h"//messaggio di viaggio
#include "gui_msg/msg_path_ros_gui.h"//messaggio di path
#include <stdlib.h> // abs()

void messaggiViaggio()
{
  int randnum;
  int k=10;
  ros::init(argc, argv, "talker");


  ros::NodeHandle n;


  ros::Publisher ROSGUI_topic = n.advertise<gui_msg::msg_ros_gui>("ros_gui_msg", 1000);

  ros::Rate loop_rate(1);


  //int count = 0;
  while (ros::ok())
  {
    /***************
    GENERO NUMERO CASUALE X MESSAGGI
    *****************/
    randnum=(int)((2*(rand()%k))-(k));//generate rnd number tra K e -K
    ROS_INFO("%d",randnum);//print them
    /*******************
    ISTANZIO IL MESSAGGIO
    *******************/
    gui_msg::msg_ros_gui msg;

    /******************
    PREPARO IL MESSAGGIO
    ******************/
    msg.batteryLevel=0+abs(randnum*10);// int8 livello della batteria: va da 0 a 100
    msg.compass=0+randnum;/* int16
    bussola, va da -2e16 a +2e16,
    Un giro della lancetta rossa corrisponde a 10
    lo zero si trova ogni k*10, k app a interi: compass=0=10=20=-10 corrisponde al nord.
    se ho compass=0 e voglio fargli segnare l'est edvo mettere compass=(10/4)=2.5
    owest compass=(3*10/4)=7.5*/
    msg.variometer=0.2+randnum;//float64 variometro va da -10 a 10 m/s 
    msg.altimeter=0+randnum*100+randnum*randnum*10+randnum;//int16 altimetro: misura la quota in metri slm
    msg.GPS1drone=0.6+randnum;//float64 GPS1drone
    msg.GPS2drone=0.4+randnum;//float64 GPS2drone
    msg.GPS1home=0.6+randnum;//float64 GPS1home
    msg.GPS2home=0.4+randnum;//float64 GPS2home
    /******************
    STAMPO
    ******************/


    ROS_INFO("\nbattery:\t%d\ncompass:\t%d\nvariometer:\t%f\naltimeter:\t%d\nGPS1drone:\t%f\nGPS2drone:\t%f\nGPS1home:\t%f\nGPS2home:\t%f",msg.batteryLevel,msg.compass,msg.variometer,msg.altimeter,msg.GPS1drone,msg.GPS2drone,msg.GPS1home,msg.GPS2home);
    /******************
    INVIO
    ******************/

    ROSGUI_topic.publish(msg);

    ros::spinOnce();

    loop_rate.sleep();
    //++count;
  }

}
int main(int argc, char **argv)
{
  int k=10;//costante per il numero di punti


  //coordinate GPS home e goal
  float GpsLatHome=45.05;
  float GpsLngHome=7.64;
  float GpsLatGoal=45.08;
  float GpsLngGoal=7.67;
  //var per inviare coordinate gps drone
  float GpsLatDrone;
  float GpsLngDrone;






  ros::init(argc, argv, "talker_path");


  ros::NodeHandle n;


  ros::Publisher ROSGUI_topic = n.advertise<gui_msg::msg_path_ros_gui>("ros_path_gui_msg", 1000);

  ros::Rate loop_rate(1);
  gui_msg::msg_path_ros_gui msg;//istanzio il messaggio

  /**************
  /INVIO LA HOME
  /*************/
  //riempo il messaggio
  msg.remainPoint = k;//int64 punti rimanenti del percorso
  msg.GPSLAT = GpsLatHome;//float64 GPS2drone
  msg.GPSLNG = GpsLngHome;//float64 GPS1home
  //invio
  ROSGUI_topic.publish(msg);
  //STAMPO quello inviato    
  ROS_INFO("\nremainPoint:\t%d\nGPSLAT:\t%f\nGPSLNG:\t%f",msg.remainPoint,msg.GPSLAT,msg.GPSLNG);
  /*************/

  /**********
  INVIO IL PATH
  ***********/
  int remainPoint = k;//punti rimanenti per del percorso
  while (ros::ok() && remainPoint>=0)
  {
    //GENERO I MESSAGGI
    msg.remainPoint = remainPoint;//int64 punti rimanenti del percorso
    msg.GPSLAT = GpsLatHome+(((GpsLatGoal-GpsLatHome)/k)*(k-remainPoint));//float64 GPS2drone
    msg.GPSLNG = GpsLatGoal+(((GpsLngGoal-GpsLngHome)/k)*(k-remainPoint));//float64 GPS1home
    //invio
    ROSGUI_topic.publish(msg);    
    //STAMPO quello inviato    
    ROS_INFO("\nremainPoint:\t%d\nGPSLAT:\t%f\nGPSLNG:\t%f",msg.remainPoint,msg.GPSLAT,msg.GPSLNG);
    
    ros::spinOnce();
    loop_rate.sleep();
    remainPoint--;//diminuisco gli step
  }
  /*************/

  /**************
  /INVIO IL GOAL
  /*************/
  //riempo il messaggio
  msg.remainPoint = 0;//int64 punti rimanenti del percorso
  msg.GPSLAT = GpsLatHome;//float64 GPS2drone
  msg.GPSLNG = GpsLngHome;//float64 GPS1home
  //invio
  ROSGUI_topic.publish(msg);
  //STAMPO quello inviato    
  ROS_INFO("\nremainPoint:\t%d\nGPSLAT:\t%f\nGPSLNG:\t%f",msg.remainPoint,msg.GPSLAT,msg.GPSLNG);
  /*************/

  //messaggiViaggio();
  return 0;
}
